package views

import (
	tgbotapi "github.com/cpt-nemmo/telegram-bot-api"
	"log"
	"test/internal/bot"
	"test/internal/bot/chat_types"
	"test/internal/bot/message_sender"
	"test/internal/logger"
)

func ViewCmdHelp() bot.ViewFunc {
	l := logger.Enter("bot.views.view_cmd_help.ViewCmdHelp")
	defer func() { logger.Exit(l, "bot.views.view_cmd_help.ViewCmdHelp") }()

	return func(b *bot.Bot, update tgbotapi.Update, gitlabBaseUrl, gitlabToken string) error {
		text := "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —á–∞–π–Ω–∏–∫–æ–≤ üìñ\n\n\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Ö—ç–Ω–¥–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—ç–≥–æ–º <b><i>#issue</i></b>.\n" +
			"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–º –ø–æ–ª—å–∑–≤–∞—Ç—å—Å—è –≤—ã –¥–æ–ª–∂–Ω—ã —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:\n\n" +
			"1. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç–∏–∫\n\n" +
			"2. –û–±—ä—è–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –±—É–¥–µ—Ç–µ –ø–æ—Å—Ç–∏—Ç—å –≤–∞—à–∏ –∏—Å—É–π–∫–∏. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ" +
			"—Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã <i>/setproject</i>.\n\n" +
			"3. –î–∞–ª—å—à–µ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª—é–±–æ–º —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ì–ª–∞–≤–Ω–æ–µ —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏–µ " +
			"—Å–æ–¥–µ—Ä–∂–∞–ª–æ \n\n<b>'Title:'</b> \n\n<b>'Desc:'</b> " +
			"\n\n–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Å—É–π–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –ò —á—Ç–æ–±—ã –æ–Ω–∏ —à–ª–∏ –∏–º–µ–Ω–Ω–æ –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ." +
			"–°–Ω–∞—á–∞–ª–∞ 'Title:' --> –ø–æ—Å–ª–µ 'Desc:' .\n\n" +
			"4. –ù—É –∏ –≥–ª—è–Ω—É—Ç—å –∫–∞–∫–æ–π —Å–µ–π—á–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ–µ–∫—Ç –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <i>/getproject</i>."

		chatType := update.Message.Chat.Type

		switch chatType {
		case chat_types.GROUP_CHAT:
			if err := message_sender.Send("–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º üòî", b.Api, update); err != nil {
				log.Printf("[ERROR] error while sending text msg: %v", err)
			}
			return nil
		case chat_types.SUPERGROUP_CHAT:
			if err := message_sender.Send("–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º üòî", b.Api, update); err != nil {
				log.Printf("[ERROR] error while sending text msg: %v", err)
			}
			return nil
		}
		if err := message_sender.SendHTML(text, b.Api, update); err != nil {
			log.Printf("[ERROR] error while sending text msg: %v", err)
		}
		return nil
	}
}
